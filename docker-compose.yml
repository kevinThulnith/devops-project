version: "3.0"

services:
  lr-database:
    image: postgres:14-alpine
    container_name: lr-database
    ports:
      - "5432:5432"
    volumes:
      - lr-db-data:/var/lib/postgresql/data
    env_file:
      - .env.prod
    networks:
      - lr-network
    restart: unless-stopped

  lr-redis:
    image: redis:7-alpine
    container_name: lr-redis
    volumes:
      - lr-redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - lr-network
    restart: unless-stopped

  lr-frontend:
    container_name: lr-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - lr-network

  lr-proxy:
    image: nginx:1.25-alpine-slim
    container_name: lr-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - media_files:/app/media
    networks:
      - lr-network
    depends_on:
      - lr-frontend
      - lr-backend

  lr-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lr-backend
    ports:
      - "8000:8000"
    volumes:
      - media_files:/app/media
    env_file:
      - .env.prod
    networks:
      - lr-network
    depends_on:
      - lr-database
      - lr-redis

networks:
  lr-network:
    driver: bridge

volumes:
  lr-db-data:
  lr-redis-data:
  media_files:
